<tool id="vcf_extract_DBSNP" name="Extract DBSNP and VCF region and annotate VCF File" version="1.0.0">
  <description>Reads fom a specified region of both DBSNP and target VCF file, then using SNPsift annotates the file accordingly </description>
  <command>
   python "~/galaxy-dist/tools/vcf_tools/vcfPytools.py"
      extract 
      --in=$input1
      --out=$output1
    #if $region == "true":
      --region=$region
    #else:
      --region= `cat $input1 | ./getRegion.awk`
    #end if
      ;
 tabix -h ~/galaxy-dist/tools/SOER1000genes/data/dbSNP.vcf.gz $region > $dbsnp;
 java -jar ~/galaxy-dist/tool-data/shared/jars/snpEff/SnpSift.jar annotate $dbsnp $output1 1> $variants_annotated 2> $err_output;
   
  </command>
  <inputs>
    <param name="input1" label="VCF file" type="data" format="vcf" />
    
    <conditional name ="region">
    <param name="display_region" display="checkboxes" label="Extract records from this region" type="boolean" help="If you do not select this it will find the chromosome and region from your input file automatically" value ="true"/>
    <when value="true">
        <param name ="region" label="Type in region" type="text" help="The format of the region is ref:start-end, where the and end coordinates are 1-based" optional="false"/>
    </when>
    </conditional>
  </inputs>
  <outputs> 
    <data format="vcf" name="output1" label="${tool.name} from ${on_string}" />
    <data format="vcf" name="dbsnp"   label="${tool.name} from ${on_string}.dbsnp"/>
    <data name="variants_annotated" label="${tool.name} annotated from ${on_string}" format="vcf"/>
    <data name="err_output" format="txt"/>
  </outputs>
</tool>
